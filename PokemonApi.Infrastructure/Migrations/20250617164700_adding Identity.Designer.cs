// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonApi.Infrastructure.Data;

#nullable disable

namespace PokemonApi.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250617164700_adding Identity")]
    partial class addingIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fire"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Grass"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Psychic"
                        });
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kanto"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Johto"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hoenn"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sinnoh"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Unova"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Kalos"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Alola"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Galar"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Paldea"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Orre"
                        });
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            FirstName = "Ash",
                            Gym = "Pewter Gym",
                            LastName = "Ketchum"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            FirstName = "Misty",
                            Gym = "Cerulean Gym",
                            LastName = "Waterflower"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            FirstName = "Brock",
                            Gym = "Pewter Gym",
                            LastName = "Harrison"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            FirstName = "Cynthia",
                            Gym = "Sinnoh League",
                            LastName = "Shirona"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 6,
                            FirstName = "Serena",
                            Gym = "Kalos Showcase",
                            LastName = "Yvonne"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 8,
                            FirstName = "Leon",
                            Gym = "Galar League",
                            LastName = "Crown"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 4,
                            FirstName = "Dawn",
                            Gym = "Sinnoh Contests",
                            LastName = "Hikari"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 3,
                            FirstName = "May",
                            Gym = "Hoenn Contests",
                            LastName = "Maple"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            FirstName = "Gary",
                            Gym = "Pallet Town Lab",
                            LastName = "Oak"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 9,
                            FirstName = "Liko",
                            Gym = "Paldea Academy",
                            LastName = "Star"
                        });
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Charizard"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Blastoise"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Venusaur"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pikachu"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2019, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mewtwo"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2021, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Snorlax"
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2020, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Garchomp"
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2021, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gengar"
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2022, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sylveon"
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2022, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lucario"
                        });
                });

            modelBuilder.Entity("PokemonReviewApp.Models.PokemonCategory", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PokemonCategories");

                    b.HasData(
                        new
                        {
                            PokemonId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            PokemonId = 1,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            PokemonId = 2,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            PokemonId = 3,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            PokemonId = 5,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 6,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 6,
                            CategoryId = 3
                        },
                        new
                        {
                            PokemonId = 7,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 7,
                            CategoryId = 3
                        },
                        new
                        {
                            PokemonId = 8,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 9,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 9,
                            CategoryId = 3
                        },
                        new
                        {
                            PokemonId = 10,
                            CategoryId = 5
                        },
                        new
                        {
                            PokemonId = 10,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("PokemonReviewApp.Models.PokemonOwner", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("PokemonOwners");

                    b.HasData(
                        new
                        {
                            PokemonId = 1,
                            OwnerId = 1
                        },
                        new
                        {
                            PokemonId = 1,
                            OwnerId = 6
                        },
                        new
                        {
                            PokemonId = 2,
                            OwnerId = 2
                        },
                        new
                        {
                            PokemonId = 2,
                            OwnerId = 9
                        },
                        new
                        {
                            PokemonId = 3,
                            OwnerId = 3
                        },
                        new
                        {
                            PokemonId = 4,
                            OwnerId = 1
                        },
                        new
                        {
                            PokemonId = 4,
                            OwnerId = 6
                        },
                        new
                        {
                            PokemonId = 5,
                            OwnerId = 9
                        },
                        new
                        {
                            PokemonId = 5,
                            OwnerId = 4
                        },
                        new
                        {
                            PokemonId = 6,
                            OwnerId = 7
                        },
                        new
                        {
                            PokemonId = 6,
                            OwnerId = 3
                        },
                        new
                        {
                            PokemonId = 7,
                            OwnerId = 4
                        },
                        new
                        {
                            PokemonId = 8,
                            OwnerId = 8
                        },
                        new
                        {
                            PokemonId = 8,
                            OwnerId = 5
                        },
                        new
                        {
                            PokemonId = 9,
                            OwnerId = 5
                        },
                        new
                        {
                            PokemonId = 10,
                            OwnerId = 10
                        },
                        new
                        {
                            PokemonId = 10,
                            OwnerId = 4
                        });
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PokemonId = 1,
                            Rating = 5,
                            ReviewerId = 1,
                            Text = "Charizard is a powerhouse!",
                            Title = "Blazing Star"
                        },
                        new
                        {
                            Id = 2,
                            PokemonId = 1,
                            Rating = 4,
                            ReviewerId = 2,
                            Text = "Incredible in battles!",
                            Title = "Fiery Champion"
                        },
                        new
                        {
                            Id = 3,
                            PokemonId = 1,
                            Rating = 5,
                            ReviewerId = 3,
                            Text = "Charizard's flying is epic.",
                            Title = "Dragon Flame"
                        },
                        new
                        {
                            Id = 4,
                            PokemonId = 2,
                            Rating = 4,
                            ReviewerId = 2,
                            Text = "Blastoise is unstoppable.",
                            Title = "Water Cannon"
                        },
                        new
                        {
                            Id = 5,
                            PokemonId = 3,
                            Rating = 4,
                            ReviewerId = 3,
                            Text = "Venusaur is a tank!",
                            Title = "Grass Titan"
                        },
                        new
                        {
                            Id = 6,
                            PokemonId = 4,
                            Rating = 5,
                            ReviewerId = 4,
                            Text = "Pikachu is adorable and strong!",
                            Title = "Electric Spark"
                        },
                        new
                        {
                            Id = 7,
                            PokemonId = 4,
                            Rating = 5,
                            ReviewerId = 5,
                            Text = "Pikachu lights up the arena!",
                            Title = "Thunder Buddy"
                        },
                        new
                        {
                            Id = 8,
                            PokemonId = 4,
                            Rating = 4,
                            ReviewerId = 6,
                            Text = "Pikachu's speed is unmatched.",
                            Title = "Shock Master"
                        },
                        new
                        {
                            Id = 9,
                            PokemonId = 5,
                            Rating = 5,
                            ReviewerId = 5,
                            Text = "Mewtwo is terrifyingly powerful.",
                            Title = "Psychic Wonder"
                        },
                        new
                        {
                            Id = 10,
                            PokemonId = 6,
                            Rating = 3,
                            ReviewerId = 6,
                            Text = "Snorlax blocks everything!",
                            Title = "Sleepy Giant"
                        },
                        new
                        {
                            Id = 11,
                            PokemonId = 7,
                            Rating = 5,
                            ReviewerId = 7,
                            Text = "Garchomp is a beast!",
                            Title = "Dragon Power"
                        });
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Prof",
                            LastName = "Oak"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Nurse",
                            LastName = "Joy"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Giovanni",
                            LastName = "Rocket"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Delia",
                            LastName = "Ketchum"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Lance",
                            LastName = "Dragon"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Lorelei",
                            LastName = "Prima"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Bruno",
                            LastName = "Elite"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Agatha",
                            LastName = "Ghost"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Steven",
                            LastName = "Stone"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Wallace",
                            LastName = "Wave"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Owner", b =>
                {
                    b.HasOne("PokemonReviewApp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PokemonReviewApp.Models.PokemonCategory", b =>
                {
                    b.HasOne("PokemonReviewApp.Models.Category", "Category")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonReviewApp.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokemonReviewApp.Models.PokemonOwner", b =>
                {
                    b.HasOne("PokemonReviewApp.Models.Owner", "Owner")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonReviewApp.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Review", b =>
                {
                    b.HasOne("PokemonReviewApp.Models.Pokemon", "Pokemon")
                        .WithMany("Reviews")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonReviewApp.Models.Reviewer", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Category", b =>
                {
                    b.Navigation("PokemonCategories");
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Owner", b =>
                {
                    b.Navigation("PokemonOwners");
                });

            modelBuilder.Entity("PokemonReviewApp.Models.Pokemon", b =>
                {
                    b.Navigation("PokemonCategories");

                    b.Navigation("PokemonOwners");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
